CREATE TABLE IF NOT EXISTS CrashData_original (
    CRASH_RECORD_ID INT AUTO_INCREMENT,
    CRASH_DATE DATETIME,
    POSTED_SPEED_LIMIT INT,
    TRAFFIC_CONTROL_DEVICE VARCHAR(255),
    WEATHER_CONDITION VARCHAR(255),
    LIGHTING_CONDITION VARCHAR(255),
    TRAFFICWAY_TYPE VARCHAR(255),
    ROADWAY_SURFACE_COND VARCHAR(255),
    CRASH_TYPE VARCHAR(255),
    HIT_AND_RUN_I CHAR(1),
    PRIM_CONTRIBUTORY_CAUSE VARCHAR(255),
    STREET_NO INT,
    STREET_DIRECTION CHAR(1),
    STREET_NAME VARCHAR(255),
    DOORING_I CHAR(1),
    MOST_SEVERE_INJURY VARCHAR(255),
    INJURIES_FATAL INT,
    INJURIES_INCAPACITATING INT,
    INJURIES_NON_INCAPACITATING INT,
    CRASH_HOUR INT,
    CRASH_DAY VARCHAR(255),
    CRASH_MONTH INT,
    loc_id, 
    LATITUDE DECIMAL(9,6),
    LONGITUDE DECIMAL(9,6), 
    PRIMARY KEY(CRASH_RECORD_ID), 
    CONSTRAINT `fk_CrashData_original_Locations_original` FOREIGN KEY (`loc_id`)
        REFERENCES `bikes`.`Locations_original` (`loc_id`)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);


CREATE TABLE IF NOT EXISTS BikeRacks_original (	
    LATITUDE DECIMAL(9,6),
    LONGITUDE DECIMAL(9,6),
    LOCATION VARCHAR(255),
    NAME VARCHAR(255),
    QUANTITY INT,
    TYPE VARCHAR(50),
    RACK_ID INT(10) NOT NULL AUTO_INCREMENT, 
    loc_id,
    PRIMARY KEY(RACK_ID), 
    CONSTRAINT `fk_BikeRacks_original_Locations_original` FOREIGN KEY (`loc_id`)
        REFERENCES `bikes`.`Locations_original` (`loc_id`)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS DivvyStations_original (
    STATION_ID INT,
    STATION_NAME VARCHAR(255),
    ADDRESS VARCHAR(255),
    TOTAL_DOCKS INT,
    LATITUDE DECIMAL(9,6),
    LONGITUDE DECIMAL(9,6), 
    loc_id,
    PRIMARY KEY(STATION_ID),
    CONSTRAINT `fk_DivvyStations_original_Locations_original` FOREIGN KEY (`loc_id`)
        REFERENCES `bikes`.`Locations_original` (`loc_id`)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS DivvyTrips_original (
    RIDE_ID VARCHAR(255),
    RIDEABLE_TYPE VARCHAR(255),
    STARTED_AT DATETIME,
    ENDED_AT DATETIME,
    START_STATION_NAME VARCHAR(255),
    START_STATION_ID INT,
    END_STATION_NAME VARCHAR(255),
    END_STATION_ID INT,
    START_LAT DECIMAL(9,6),
    START_LNG DECIMAL(9,6),
    END_LAT DECIMAL(9,6),
    END_LNG DECIMAL(9,6),
    MEMBER_CASUAL VARCHAR(6),
    PRIMARY KEY(RIDE_ID)
);

CREATE TABLE IF NOT EXISTS SmartLocation_original (
    TRACTCE VARCHAR(255),
    BLKGRPCE VARCHAR(255),
    TOTPOP INT,
    COUNTHU INT,
    HH INT,
    P_WRKAGE DECIMAL(5,2),
    AUTOOWN0 INT,
    PCT_AO0 DECIMAL(5,2),
    AUTOOWN1 INT,
    PCT_AO1 DECIMAL(5,2),
    AUTOOWN2P INT,
    PCT_AO2P DECIMAL(5,2),
    R_LOWWAGEWK INT,
    R_MEDWAGEWK INT,
    R_HIWAGEWK INT,
    R_PCTLOWWAGE DECIMAL(5,2),
    TOTEMP INT,
    E_LOWWAGEWK INT,
    E_MEDWAGEWK INT,
    E_HIWAGEWK INT,
    E_PCTLOWWAGE DECIMAL(5,2),
    D3A DECIMAL(10,5),
    D4A DECIMAL(10,5),
    D5BR INT,
    D5BE INT,
    D5DR DECIMAL(10,5),
    NATWALKIND DECIMAL(10,5)
    BLK_GRP_ID INT(10) NOT NULL AUTO_INCREMENT,
    PRIMARY KEY(BLK_GRP_ID)
);

CREATE TABLE IF NOT EXISTS bikes.Locations_original (
  `GEOID` BIGINT NOT NULL ,
  `STATE` INT(10) NOT NULL ,
  `COUNTY` INT(10) NOT NULL ,
  `TRACT` INT(10) NOT NULL ,
  `BLOCKGRP` INT(10) NOT NULL ,
  `LAT` FLOAT NOT NULL ,
  `LNG` FLOAT NOT NULL ,
  `LOC_ID` INT(10) NOT NULL , 
  `BLK_GRP_ID` NOT NULL 
  PRIMARY KEY (`LOC_ID`), 
  CONSTRAINT `fk_Locations_original_SmartLocations_original` FOREIGN KEY (`BLK_GRP_ID`)
        REFERENCES `bikes`.`SmartLocations_original` (`BLK_GRP_ID`)
        ON DELETE NO ACTION ON UPDATE NO ACTION
    );
